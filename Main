//ToDo projesi
//Motoko
import Map "mo:base/HashMap";
import Hash "mo:base/Hash";
import Nat "mo:base/Nat";
import Iter "mo:base/Iter";
import Text "mo:base/Text";

actor Assistant{  
    
    type ToDo={
        desription:Text;
        completed:Bool;
    };
    
    //HashMap
    func natHash(n:Nat):Hash.Hash{
       Text.hash(Nat.toText(n)) 
    };
    
    var todos=Map.HashMap<Nat,ToDo>0,Nat.equal,natHash);
    var nextId:Nat=0;
    
    public query func detTodos() : async Nat{
        Iter.toArray(todos.vals());
    };

    //ID ToDo ataması
    public query func addTodo(description:Text):async Nat{
        let id=nextId;
        todos.put(id,{description=destription;completed=false});
        nextId+=1;
        //return id;
        id
    };
    
    //update ataması 
    public func completeTodo(id:Nat):async(){
        ignore do?{
            let description=todos.get(id)!.description;
            todos.put(id,{description;completed=true});
        }
    };
    
    public query func showTodos()async Text{
       var output:Text="\n_TO-DOs_"; 
       for (todo: TpDo on todos.vals()){
           output #= "\n" #todo.description;
           if (todo.completed){output #= "";}
       };
       output # "\n"
    };
    
    
    public fun clearCompleted():async(){
        todos:=Map.mapFilter<Nat,ToDo,ToDo>(todos,Nat.equal,natHash,
        func(_,todo){if(todo.completed)null else?todo});
    };
    
    
    
    
}
